---
- name: install openvpn
  apt:
    name:
      - openvpn
      - libssl-dev
      - openssl
      - zip
    update_cache: yes
    cache_valid_time: 86400

- name: install easy-rsa
  apt:
    name: easy-rsa
    state: installed

- name: create easy-rsa dir
  command: make-cadir /etc/openvpn/easy-rsa
  args:
    creates: /etc/openvpn/easy-rsa

- name: Set ip forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    state: present

- name: collect server.conf stat
  stat:
    path: /etc/openvpn/server.conf
  register: p

- name: preserve original openvpn conf
  command: cp -v server.conf server.conf.orig
  args:
      chdir: /etc/openvpn/
      creates: /etc/openvpn/server.conf.orig
  when: p.stat.isreg is defined and p.stat.isreg

- name: put config files
  template:
    src: "{{item.file}}"
    dest: "/etc/{{item.file}}"
    mode: "{{ item.mode}}"
  with_items:
    - { file: openvpn/easy-rsa/vars         , mode: 644 }
    - { file: openvpn/easy-rsa/message.txt  , mode: 644 }
    - { file: openvpn/server.conf           , mode: 644 }
    - { file: openvpn/easy-rsa/client.ovpn  , mode: 644 }
    - { file: openvpn/easy-rsa/nc.sh        , mode: 755 }
    - { file: openvpn/up.sh                 , mode: 755 }
    - { file: openvpn/down.sh               , mode: 755 }
  notify: reload openvpn

- name: create key dir
  file:
    dest: /etc/openvpn/easy-rsa/keys
    state: directory

- name: generate keys
  shell: bash -c "source vars && {{item.rcmd}}"
  args:
      chdir:   "/etc/openvpn/easy-rsa/"
      creates: "/etc/openvpn/easy-rsa/keys/{{item.out}}"
  with_items:
      - { rcmd: ./clean-all                           , out: 'index.txt' }
      - { rcmd: ./build-dh                            , out: 'dh2048.pem' }
      - { rcmd: ./pkitool --initca                    , out: 'ca.crt'     }
      - { rcmd: ./pkitool --server server             , out: 'server.csr' }
      - { rcmd: openvpn --genkey --secret keys/ta.key , out: 'ta.key'     }

- name: copy keys
  command: cp -v /etc/openvpn/easy-rsa/keys/{{item}} /etc/openvpn/{{item}}
  args:
      creates: "/etc/openvpn/{{item}}"
  with_items:
      - server.crt
      - server.key
      - ca.crt
      - dh2048.pem
      - ta.key

- name: start openvpn
  service:
    name: "{{ 'openvpn@server' if ansible_service_mgr == 'systemd' else 'openvpn' }}"
    state: started
    enabled: yes
